language: node_js
sudo: required

node_js:
- "node"

env:
  global:
   - DESECSTACK_DOMAIN=your.hostname.example.com
   - DESECSTACK_API_ADMIN=john.doe@example.com
   - DESECSTACK_API_SEPA_CREDITOR_ID=TESTCREDITORID
   - DESECSTACK_API_EMAIL_HOST=mail.your.hostname.example.com
   - DESECSTACK_API_EMAIL_HOST_USER=user
   - DESECSTACK_API_EMAIL_HOST_PASSWORD=password
   - DESECSTACK_API_EMAIL_PORT=25
   - DESECSTACK_API_SECRETKEY=9Fn33T5yGuds
   - DESECSTACK_DBAPI_PASSWORD_desec=9Fn33T5yGueeee
   - DESECSTACK_DB_PASSWORD_pdnslord=9Fn33T5yGulkjlskdf
   - DESECSTACK_DB_PASSWORD_pdnsmaster=9Fn33T5yGukjwelt
   - DESECSTACK_DB_PASSWORD_ns1replication=9Fn33T5yGuejeje
   - DESECSTACK_DB_SUBJECT_ns1replication=9Fn33T5yGufacv
   - DESECSTACK_DB_PASSWORD_ns2replication=9Fn33T5yGulkjhetrlkjew
   - DESECSTACK_DB_SUBJECT_ns2replication=9Fn33T5yGukjnrtj
   - DESECSTACK_NSLORD_APIKEY=9Fn33T5yGukjekwjew
   - DESECSTACK_NSMASTER_APIKEY=LLq1orOQuXCINUz4TV
   - DESECSTACK_IPV4_REAR_PREFIX16=172.16
   - DESECSTACK_IPV6_SUBNET=bade:affe:dead:beef:b011::/80
   - DESECSTACK_IPV6_ADDRESS=bade:affe:dead:beef:b011:0642:ac10:0080
   - DESECSTACK_WWW_CERTS=./certs
   - DESECSTACK_DBMASTER_CERTS=./dbmastercerts
   - DESECSTACK_NORECAPTCHA_SITE_KEY=9Fn33T5yGulkjhdidid
   - DESECSTACK_NORECAPTCHA_SECRET_KEY=9Fn33T5yGulkjhoiwhetoi

services:
  - docker

before_install:
  # Get web content
  - rm -f static
  - git clone https://github.com/desec-io/desec-static.git static
  - mkdir static/ultima certs dbmastercerts

  # Prepare images
  # we build them separately to get timing information from travis

  # live images
  - docker-compose build dblord
  - docker-compose build dbmaster
  - docker-compose build dbapi
  - docker-compose build nslord
  - docker-compose build nsmaster
  - docker-compose build api
  - docker-compose build www

  # mock images
  - docker-compose -f docker-compose.yml -f docker-compose.test-e2e.yml build static

  # test images
  - docker-compose -f docker-compose.yml -f docker-compose.test-e2e.yml build test-e2e

script:
  # e2e tests
  - docker-compose -f docker-compose.yml -f docker-compose.test-e2e.yml run -T test-e2e bash -c "./apiwait 45 && mocha ./spec"

  # API tests
  - docker-compose -f docker-compose.yml -f docker-compose.test-api.yml run -T api bash -c "./entrypoint-tests.sh"

after_failure:
  - docker-compose ps
  - docker-compose logs
