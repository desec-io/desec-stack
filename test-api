#!/usr/bin/env bash
# The following options should be set by default: -o "com.docker.network.bridge.enable_icc"="true" -o "com.docker.network.bridge.host_binding_ipv4"="0.0.0.0" -o "com.docker.network.driver.mtu"="1500" 

(
source .env
docker network inspect desecstack_front &>/dev/null \
	|| docker network create --subnet=172.16.0.0/24 --gateway=172.16.0.1 \
		--ipv6 --subnet=${DESECSTACK_IPV6_SUBNET} \
		-o "com.docker.network.bridge.enable_ip_masquerade"="true" \
		desecstack_front
)

if [ "$1" = "reset" ]
then
  if [ ! -z "$(docker volume ls | grep desecstack_dbapi)" ]
  then
    echo "removing dbapi volume"
    docker volume rm desecstack_dbapi_mysql || \
        (
            echo "removing dbapi container"
            # remove container that has uses this volume
            CONTAINER="$(docker volume rm desecstack_dbapi_mysql |& egrep -o '[a-f0-9]{64}')"
            docker rm -f $CONTAINER
            echo "removing dbapi volume (2nd try)"
            docker volume rm desecstack_dbapi_mysql
        )
  fi
fi

if [ -z "$(docker volume ls | grep desecstack_dbapi)" ]
then
  echo "NO DBAPI FOUND, PREPARING DBAPI"
  docker-compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.test.yml build dbapi
  docker-compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.test.yml up -d dbapi
  sleep 60
fi &

if [ -z "$(docker volume ls | grep desecstack_nslord)" ]
then
  echo "NO NSLORD FOUND, PREPARING DBLORD, DBAPI"
  docker-compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.test.yml build dblord
  docker-compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.test.yml build nslord
  docker-compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.test.yml up -d dblord
  sleep 60
  docker-compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.test.yml up -d nslord
  sleep 10
fi &

wait

docker-compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.test.yml build api
docker-compose -f docker-compose.yml -f docker-compose.dev.yml -f docker-compose.test.yml up --abort-on-container-exit api

exit $(docker-compose ps -q | xargs docker inspect -f '{{ .State.ExitCode }}' | grep -v 0 | wc -l | tr -d ' ')

