######
# Redirect HTTP requests on (www.)desec.* to HTTPS
######
server {
	listen 80;
	listen [::]:80;
	server_name www.desec.$DESECSTACK_DOMAIN
	            desec.$DESECSTACK_DOMAIN;
	
	include global.conf;
	
	location / {
		return 301 https://$host$request_uri;
	}
}

######
# Strip www. from HTTPS requests on www.desec.*
######
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name www.desec.$DESECSTACK_DOMAIN;
	
	ssl_certificate ${CERT_PATH}www.desec.${DESECSTACK_DOMAIN}.cer;
	ssl_certificate_key ${CERT_PATH}www.desec.${DESECSTACK_DOMAIN}.key;

	include global.conf;
	
	location / {
		add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload" always;
		return 301 https://desec.$DESECSTACK_DOMAIN$request_uri;
	}
}

######
# The website server
######
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name desec.$DESECSTACK_DOMAIN;
	
	access_log /var/log/nginx/access.log main;
	error_log /var/log/nginx/error.log;
	
	ssl on;
	ssl_certificate ${CERT_PATH}desec.${DESECSTACK_DOMAIN}.cer;
	ssl_certificate_key ${CERT_PATH}desec.${DESECSTACK_DOMAIN}.key;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload" always;

	include global.conf;
	
	######
	# Caching Policy
	######
	#expires 1M;
	#etag on;
	#location /index.html {
	#	expires epoch;
	#	etag on;
	#}
	#location /texts/ {
	#	expires epoch;
	#	etag on;
	#}
	
	######
	# Pass API requests to an API server
	######
	location /api/ {
		# max .5r/s to the API per IP, but 10 at once is okay. This limit may need to be increased once
		# client applications become more powerful
		limit_req zone=perip-api burst=10 nodelay;

		expires epoch;
		etag off;
		add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload" always;
		include uwsgi_params;
		uwsgi_pass desecapi;
	}
	
	######
	# Pass static content requests
	######
	location / {
		# we limit downloading of static assets, but bootstrapping the website takes a lot of requests (40+)
		limit_req zone=perip-general burst=1000 nodelay;

		proxy_pass http://static;
	}
}
